def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }
    aaptOptions {
        noCompress 'pb'
        noCompress 'tflite'
        noCompress 'lite'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.yondor.student"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a"
        }
    }
    signingConfigs {
        debug {
            storeFile file("../yondor-release-key.keystore")
            storePassword "vdlifvjo223jf"
            keyAlias "yondor"
            keyPassword "vdlifvjo223jf"
        }
        release {
            storeFile file("../yondor-release-key.keystore")
            storePassword "vdlifvjo223jf"
            keyAlias "yondor"
            keyPassword "vdlifvjo223jf"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "androidx.core:core:1.0.2"
    // 更新
    implementation 'com.king.app:app-updater:1.0.4-androidx'
    implementation 'com.otaliastudios:cameraview:2.3.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0-beta01'
    implementation 'com.android.support:multidex:1.0.1'
    implementation 'com.github.GrenderG:Toasty:1.4.2'
}
configurations.all {
    resolutionStrategy.force 'androidx.transition:transition:1.2.0-rc01'
    resolutionStrategy.force 'androidx.exifinterface:exifinterface:1.1.0-beta01'
}